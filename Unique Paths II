class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if(obstacleGrid[0][0] == 1)
            return 0;
        int[] dp1 = new int[obstacleGrid[0].length];
        int[] dp2 = new int[obstacleGrid[0].length];
        for(int i = 0; i<obstacleGrid.length; i++) {
            for(int j = 0; j<obstacleGrid[0].length; j++) {
                if(i == 0 && j == 0)
                    dp2[j] = 1;
                else {
                    if(obstacleGrid[i][j] != 1) {
                        int right = (j > 0) ? dp2[j-1] : 0;
                        int up = (i > 0) ? dp1[j] : 0;
                        dp2[j] = up + right;
                    }
                    else
                        dp2[j] = 0;
                }
            }
            dp1 = dp2;
        }
        return dp1[obstacleGrid[0].length-1];
    }
}
